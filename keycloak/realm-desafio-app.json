{
  "id" : "c85db9e5-3488-42d7-81f5-43c802136608",
  "realm" : "desafio-app",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "bruteForceStrategy" : "MULTIPLE",
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "b69a43f8-afb8-45f4-9806-e8e83d1b9e78",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "d01f81a5-adba-42ca-882a-be67bf61df7c",
      "name" : "aluno",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "5812675b-1855-4513-8ff3-4a36623067ca",
      "name" : "coordenador",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "945d32c9-b3ec-49dd-8039-8b36b30840d4",
      "name" : "admin",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "be5bbbc1-62c1-4eba-ae12-58eaacc292ba",
      "name" : "default-roles-desafio-app",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "8de755e7-6e3b-424d-8c2f-7fc3401d5353",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    }, {
      "id" : "caea7133-3afc-4259-8762-07d579b16d62",
      "name" : "professor",
      "description" : "",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608",
      "attributes" : { }
    } ],
    "client" : {
      "desafio-frontend" : [ ],
      "realm-management" : [ {
        "id" : "63e882e2-68b3-46e0-9d40-ce4b7de1cbce",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "8e628fea-21cc-46b6-b1ac-6a77b25f87e8",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "b12bfd06-c19c-45a7-84d1-33d29f23a48b",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "72c6a09c-4719-4bf3-bb04-167ce8248470",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "03985bf6-70c2-40d2-86ba-c799b4d70049",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "30656eab-6258-4e0d-bb77-d57089d18077",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "7d576c28-0047-42d5-8cf6-5bbfb683bdb4",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "60df1183-903d-4ad0-b731-072cb9eb3450",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-realms", "manage-clients", "manage-events", "query-users", "create-client", "impersonation", "view-clients", "manage-identity-providers", "manage-authorization", "view-realm", "view-users", "manage-users", "query-groups", "view-identity-providers", "manage-realm", "query-clients", "view-authorization", "view-events" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "9d3205e0-8349-4356-9c6f-36e5f2cf2e37",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "6c0bda3a-b379-43b7-8021-3615440f4278",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "43db83b6-9c9a-44b7-932f-b242d8dbac3a",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "1d2d019c-e925-4c22-b9c8-fd4801a96019",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "001a46df-5fba-4dd5-b2d1-c3b95181ca46",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "133d6d56-126f-468b-b830-2198b5d727f5",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "bbefd8ee-7411-47be-993e-f47261808bc0",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "88003cae-2f3c-457e-b0a5-dc3a40428fbe",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "98eb0ad9-6852-4b34-add0-95257715ea04",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "7d30a394-aedf-4e45-a3ee-7508ed22a93e",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      }, {
        "id" : "3c68289a-5ceb-40fa-8518-f096693ba1bd",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "cc032586-56f0-4f17-9d1a-8a8023ec8e10",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "726243c1-9fca-4eed-add5-09a7a5056d1f",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "d9c22a3c-4429-4ae8-9744-b74251594e5e",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "0b5d0bbb-31f6-48ab-b178-81e8bc9a6227",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "7d2fdb6a-3c48-4fe9-9470-36c11fcba9db",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "9d589b95-2f4a-4b3c-8d96-87309b3b5a6f",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "1b4eb718-d08a-4095-bb00-a117af6b7a9d",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "379a494d-3803-4c81-bdc0-f009cc710cec",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "bc934b65-00ea-404b-bb6f-a52af9fe9c27",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      }, {
        "id" : "22bb39b3-c5fb-45fa-bb83-c6f3f1658fe7",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "be5bbbc1-62c1-4eba-ae12-58eaacc292ba",
    "name" : "default-roles-desafio-app",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "c85db9e5-3488-42d7-81f5-43c802136608"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "Yes",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "required",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "f2fac0c8-599c-4b60-bc17-d731f360fdf9",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/desafio-app/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/desafio-app/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "0c53eb96-2115-4860-9409-44c73b2c9d34",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/desafio-app/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/desafio-app/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "a9f2b5de-70f4-4ade-a658-c20f1ec0f111",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "1369b070-6eeb-42fb-966a-b665b7465ae7",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "726243c1-9fca-4eed-add5-09a7a5056d1f",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "d9c9e659-0ef3-4e19-abc2-dcb2b56b53e7",
    "clientId" : "desafio-frontend",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://localhost:4200",
    "adminUrl" : "http://localhost:4200",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:4200/*" ],
    "webOrigins" : [ "http://localhost:4200" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "standard.token.exchange.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "dpop.bound.access.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "4f6acaf2-efd2-4714-bdfd-4e74cd84fa9f",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "e422e417-118d-420a-a049-0b15c0548df6",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/desafio-app/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/desafio-app/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "ce0bbcee-14c7-46fa-a9de-dda68aba0e28",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "0b3e2803-1e40-4130-a6d6-d7a8cecf6c99",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "2d41685b-f5e1-4fec-9de1-2ba2f79ba5aa",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    }, {
      "id" : "2f0130bf-39ec-41d9-b6a8-6e5fe8949bbb",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "51fecf94-352b-4913-ac58-fde945ef90d3",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "userinfo.token.claim" : "false",
        "user.attribute" : "foo",
        "id.token.claim" : "false",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "20c8af8f-92aa-458e-a672-9fcd4fda3a4e",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "64f91343-7bf1-4873-8497-2bd40fcf7055",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "f0d5d2c3-be37-458b-a811-30c9b718b3cc",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "8932bd03-3ea6-4a1b-9c93-2279aca7a038",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "a9ba2467-8495-4d94-88d1-cc4f742cf760",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "1bfbbe43-3071-4d26-9379-0af0c866ccda",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "bfdbbf4c-c5bf-48e8-a2b9-2bd1346a41d8",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "81654bb3-2478-4e81-bb35-72d9ea7f0df1",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "e2db5c55-749d-4c93-93df-7dd7ead954b3",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "5b5e58ff-64df-4295-b8d2-8d78a8118c14",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "6ff08854-22f0-4311-9512-ad2595a6ea0e",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "538f719a-bf23-4d7a-a879-647795c857fe",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e3592140-5172-4348-b631-1e7c68625024",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "4f0a6db0-dc4c-4ac9-8a21-e5e05be2a686",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "caf21443-e8a3-4ca6-9cc5-c5e0897845ea",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c5dc4717-aa04-4964-84ea-86890d92c1d4",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3f5ec562-fe70-4dfd-8fa6-99b7bed0a9dd",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "d0f9a80f-1e3d-43e1-aa5b-2905f9a3c06e",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "66197f47-1e10-4a87-9f39-7e205a4cb274",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    }, {
      "id" : "f8031311-e9c4-4118-b46e-10b879768729",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "ee77e22b-064f-4b5e-8031-9508c8975c8d",
    "name" : "service_account",
    "description" : "Specific scope for a client enabled for service accounts",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "15d7e8ab-5179-4c40-8f96-d235a355863b",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0df04e6e-91ed-42bc-b9a1-7e03710cecd0",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2c98d689-44af-4645-9cb6-8673b7a31013",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "3a0f2a80-219c-4f34-bd0c-0713f0ee2caf",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c0c1eae0-4405-4472-80d2-f7be72c6f607",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cdef5bd2-a51a-4af6-a688-d8826a348562",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0e9d79de-9ab1-40f1-b589-f1778818f846",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0ce7f537-30f4-4e4c-9072-fcdb93cae373",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d40948a1-57be-4802-b5af-db358d6cb728",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "68176627-939d-48fb-82ab-c435d9a41828",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "f56f1009-892b-44c2-8d0e-df41d7949c94",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "01fab528-db4c-456d-a16c-3b34d9ca1d3d",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "8cd23202-79b9-449d-bed8-9215f3df6751",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "01e7194e-919c-4619-8d5a-2a35482839ae",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d1c8aa3a-0379-42ac-9cff-606d79ece174",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9891f982-7b32-4641-bed6-8b6eab8540b3",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3dfaac80-7d98-426c-9eae-1218724b6122",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dd02a615-b9be-45b1-a4ad-9c799d8b5547",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "9011ad1e-7fd1-412d-a537-e45475b7cd31",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "1f920450-0d7d-4fa5-9072-b3160616202d",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "d8f70230-b693-4d11-bd36-261421c53c40",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "40d3346d-cc81-4018-bb98-c4f8ff601a37",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "de5bf94e-0fd9-4e25-a12d-9cbb5b9f2033",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "roles", "saml_organization", "profile", "web-origins", "acr", "role_list", "basic", "email" ],
  "defaultOptionalClientScopes" : [ "offline_access", "microprofile-jwt", "organization", "phone", "address" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "0b9797d8-408b-4772-acdc-55f7b6ea99e5",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "8082a595-7cca-4a87-a91c-f2486be2abc8",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "24f67dc6-30da-49ec-9fc3-8752a7c7deb4",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "6beeff29-1574-434a-8f5a-92e20f9c93e9",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "c590ec56-d143-4bd1-8b1a-4a513ef4ee86",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "saml-user-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "bf135376-a11e-49b7-b73d-6a34d541d4fc",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f9ff276d-30eb-4cb8-be34-75238908f5a8",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "19dea5d7-2605-4b77-a5cd-100ab3f89168",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "d7a81aef-2d88-4ec8-85b2-6a33f042d0bd",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "af337693-53d5-4d87-b130-62d32e6ce703" ],
        "secret" : [ "JPmAEx_ohwf6-3x-uyJMNxwwQ20-kWQJLGDILFTqV94cHYuvT3t0-Ytk3wvoH0KCaR2sIh-FwQL6cnipd3Z5RCKoVFadcgJ-6KfYR1Tca7GrxyWvju2JHp9w_-m583z1BLATPsaboT7CYudf-rOhz61PS0rg9FoDhQUQP2xIaUs" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "313478b0-6f7a-4256-9107-1db9db160fda",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA2khiVp1tuxeFSRBLVWn89Y04aUyj0geGK4YFu0ZvXEGCvLpoiF8JbEaiavj0SP7k7eMgrwvXz/s7IemYGVlqHl4yRFf56eJUcChXajUR7P3EW1SLLaDnRa/3v6d5xlyrVE0w8pfzDVXNr+2YL+XNNdqBRmqSeUoVha3WuIdzlSgaN7oSwh/X5g40YbGG8ZY/jdRV6PHJQWnfV5rk7/nd18ZAYXah0kpTizDPEdZTfHq4zxerjMAy5fPiHpCwTvahBfLhDArZXK8ROuXSXK5zQs9PbELahS9frI6nVcu0u3qj2TaPBlVgpevAy0SJuBvJnsj6TeseGVdv18OHj7Uy9QIDAQABAoIBABuImzQ8Z2Wncd3levCAjgfrPae1TcoQaObUi6SJHe2P1eM4dYxoxdItQWTSQlNy04MDmKZ74p0OyPFeJca3dfX0ASMzIF2qzuaBhYVAFyLDCnb6vb45AvMnXyODBzlI4dOgaQGGE9fQGuyLa8b0QGOqoY6K+C7pyWKIqwJbvkNHWrjuRL/08N/9zyMvMscLYJT/PLX1dVX9HV4Qlq84bsoZPh4GQdX+SNSChxzFSyyEkgx2nqXHVX6rWHj7Vbf++SUy8nQ6z8wYFePhdKi48A80/yF1fswaffERm0C8QST7PmtGffBMXlBNwSMaEw/1ld5NIOJCNoqSfgH7jZA6f4ECgYEA7s0addEl6B6280w4FWiqfLbBQj+QXxaK19EZB9fH7BUMeDY+jSbx/2ungKDtrsNUUxMhrfufC85It8Pfubqj4rvLS7gmXD/ww3L0bI/4cdxGdJbWGRKoBrnaXLx4fhb+744mAJiSGE+2+SVmkJ6ZRrjHiC48XjP8O6ZvSL/vG98CgYEA6gD43znXuPUhmpIOutaamIwYzffD1NZl3LuWXJrdcYRgVyN8djsIGL5mbYNaW9S9ZjKbzHXbmdvarQcqujE/DcSo/3glxJQTdzI+mAYYqkYBo6KTuczqIhY6WeLrbxbi/WxGcaVEpZc8f3Inm/fhIiijVD+gxMj/xOaLlqSVC6sCgYAIvroZVm9s8LMCdegX4J1ds9Of+XPwB4NOI/omr2BC5QJv5Iyl3qc+E1MvArWxkLWl1S2GkZBhfkxrbmDjDFK0Gux2+WduOWk3vx30W9FdWhO6cUul32kH1gaJHt3KwEzVuP7rRqsS+Nhah2QaJ7S1Qk8MTaUoTf8OsCmjIGRBQQKBgQCB/WRC7OjvMA0oxnY0SD68+yZUVIyO0ULoqbRPYSAejUDPZ0EelJBc3ngb4dnyJW3JNdfibp49DCqf79lGcVDrnxGaSO4CE5f0oQ6weMJ+5EDI2+lgT3rI0Lw9bpcGsRoLWXiQbRSDQE41Jf7m335K8XQ5utbeOiILCV8FogvB3QKBgBrW4TzRbX5qNQ5Cigd0e9KBQmIYyJIsF+7jCGaRyA+K+y71rUZBEWMPJZvNvNWGA0LZSZf1Y7dUAetfzlyxeOjx5Gf1eag5MI9K4QzAmLHpwV5aBfKm+2o0SulL1B6rdYZPVTHvKQPwPRA22JtrFJb1oCnmG0Sws73wQoPe/dbN" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICpTCCAY0CBgGaHZx/0zANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtkZXNhZmlvLWFwcDAeFw0yNTEwMjUyMzAxMjZaFw0zNTEwMjUyMzAzMDZaMBYxFDASBgNVBAMMC2Rlc2FmaW8tYXBwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2khiVp1tuxeFSRBLVWn89Y04aUyj0geGK4YFu0ZvXEGCvLpoiF8JbEaiavj0SP7k7eMgrwvXz/s7IemYGVlqHl4yRFf56eJUcChXajUR7P3EW1SLLaDnRa/3v6d5xlyrVE0w8pfzDVXNr+2YL+XNNdqBRmqSeUoVha3WuIdzlSgaN7oSwh/X5g40YbGG8ZY/jdRV6PHJQWnfV5rk7/nd18ZAYXah0kpTizDPEdZTfHq4zxerjMAy5fPiHpCwTvahBfLhDArZXK8ROuXSXK5zQs9PbELahS9frI6nVcu0u3qj2TaPBlVgpevAy0SJuBvJnsj6TeseGVdv18OHj7Uy9QIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQC+/9JG5d2BEbB0hOHQXAWkZSc7z/p2WBx11ujc2tVClA2wx0Kj68v0gA7E2VLoecWH6r2Nqa0U3Gh6YqryDJW7Kza6UU6YWOqPBo8J/IWLuWumx4x6SBdSH+s/uHH0ICyJAEawswiU+3e1qrF9fuQW5gAGFuzbUasJS0uoW6MThD2c5z2u4n+b+i4qI8zUPKO8CB/VSRK2hsxzcujt/szNXdYrTXA4YLisSteQQnAnVSVP9KKWqOvcruzNYs8xseRTtOtBRKY9qhtHpqC6eV65/pmx+E6uRAit6ZaA5N22P80SyfZDwTVXaGoINITpu/JTxRXSfueP3Fo7w7FValmz" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "691bcecb-9259-4c00-88ea-5c536d3473e7",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEA62O0ORFh3gj45xjkqo+2iD2vE0z+YoADjdP8cFpfHI2FSqCjHum3yvd5gKy4DviDIZ8fAFZFV+7/E/s4i2/G0Ma4ycY8BPQjrE2szGc/2qG7kiPCLfbH/k2fA+T3692zmtcT4ro6dhhNk42Ae6F+p777nDWOoZiFSneEVZ4ihdzOsZMDJUwQC+sfR2GszwIN0kD06XKJICyuG9OXrNqJejDglA8SxwWZ9+YdEgis7ullTxg4ac3Ag63xyIs1bn8cyGQgASnNGFMGXUSWIfCFw1r4LbZiQ+TSv1E9Cy9K/+aoL+jrmT9JNUFDjPlhNLmGxo/1l/mCZZWQltggW9DFUwIDAQABAoIBAHNgVIcgYQMPDMlhZzu+425WJcllFM89BgDvpi1/7ly1dV8F686MKn0+3fxXLISSBNxm/TASGT0ntTmbCrU13ZKZxRuJogOfkxiynf82oJLOcX0JL/WNn6ujakzjXy3qZk2AHIwmUd9uvB+V3SM8HjOkpfmEOtw0QSkl+eRpdWx8xOFaG4aVGCgE6YryzsXig6NpQ2mmGmI/B+37nm1xbokJGp+/9wCXMoeo8C72hUAbSt7qLNDkDcwBeN0vWNKC28IhFQQWnZc/+lG+uhpbiggzhaK8PcHaBATVkRvrhkzsjNH8D/BUjmPhwWGrbC2qM9qdiAV5uvQ5zXFZt39eyrkCgYEA9lZBVyfgm7M9L/t3YeH4rcj/HXwJkE/3AZ6NKjDrUlqUhMIXdfcqMEQqQhO4uCeRMOCf1K1Gq6ifelzg3xKrpaokK9fW7KwYXXakEv6zw4qpM5SKwBcZ01InJbGY6JZVrpPSh/L3DmQ/e9W4OKd7NAdoG2wiXobNfpVICYy4pf8CgYEA9J+DVHb+15BqqSzZCo1ENXTYLVR0Lz/RPg7GhBvRJ7DpQgAnKvDxvfqygjUcsAGKX0XwDUKjIM8sCraRWnK3c2mZ+X3XgWOeIP5V42gs20+kSwYIcd80ezlJgcTds1Z0+w5OLOms1lfW6zVAdVPy2WP/vMGaTG08ZNSdRYpnaK0CgYEA1I6dFv173B4PgCW2X6nDEQHM0L5E6ld1xdnv6SYJCCjM2rk30TyTFM7cv+OQkqbhq5FHmRZjUp/P7J/UEehkYDCtwX8fH11oMM28yf8pUmOFmNJl31aPnD7ZNLdIP/nouRkootJNyAdMmChUK96oer6hYHgwN+yNyNo7LLJWajUCgYAYWQQeVRW6aPJk0kTsCvF+DJozsNM7nLN75MaXgZlIxRACdLdxS7gT+67mzNiFIDIgl3p0J2zLKDOvAUroYMCnqRwdPAxGIZ8sk4QC9Wx5i6zDlt8iTmAP37zUQL78SZ+tGVhomf2M/AM1OACpbOigAJcEt5RfBQRc2NiqgkMWpQKBgAsp9mFt6dNBmsBDyHphPWUDTdCStN0sSobphAkgnvbEZ1yW3EunjdknFoCYJAsb32O2qDMVZaMueMV0tTX3pkLO6RIf+9xROxAcjPrTf7FD1t9huYj3gM/J7A0hcN2Y/D/YhdQbq2YYIr1HoLZWWs6bjlUowKAfMYNcjdoLbMg2" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICpTCCAY0CBgGaHZyDoTANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtkZXNhZmlvLWFwcDAeFw0yNTEwMjUyMzAxMjdaFw0zNTEwMjUyMzAzMDdaMBYxFDASBgNVBAMMC2Rlc2FmaW8tYXBwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA62O0ORFh3gj45xjkqo+2iD2vE0z+YoADjdP8cFpfHI2FSqCjHum3yvd5gKy4DviDIZ8fAFZFV+7/E/s4i2/G0Ma4ycY8BPQjrE2szGc/2qG7kiPCLfbH/k2fA+T3692zmtcT4ro6dhhNk42Ae6F+p777nDWOoZiFSneEVZ4ihdzOsZMDJUwQC+sfR2GszwIN0kD06XKJICyuG9OXrNqJejDglA8SxwWZ9+YdEgis7ullTxg4ac3Ag63xyIs1bn8cyGQgASnNGFMGXUSWIfCFw1r4LbZiQ+TSv1E9Cy9K/+aoL+jrmT9JNUFDjPlhNLmGxo/1l/mCZZWQltggW9DFUwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBdQYD4CtXHSskpYkHLsMRAu+fN6bVixvdalPhLeyQn7nWLegestSPpQtGwMH6PbEyMQlQn0Wqlsaw3p4lF0OZ5ti76T03sZg2ORnYn5MhsFOKsqDxejqb5RSQNJeIKnr+8ubIP0lh9wPt1JvkBqfc74hGL4bOkS98Ajy0embHX8sXCEAYWhFNW94cd4zlxQmf208I6Of2cdTT/VA+9NusUWUtC518cc7/Fmt+cAVTgxcjIp4GbOn/NluLCdpBsyHQuOaKcOZMBf6/TT4VeSTU8tWEkT7ggj3Cqa7WOd0LmDJJLWYIIlw2rHs9C8P+DKMsLYag3EKdnaau16iYBObUP" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "e04e1132-55a0-462d-8449-0ec514d57865",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "84c421ec-eff7-4884-9ff8-9f8a62254a08" ],
        "secret" : [ "Bbt5CBTTAkLiEKj94jsy4w" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "authenticationFlows" : [ {
    "id" : "8f0734e4-c081-4861-9d9e-aa74ad3aa0e6",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "df48715e-fba2-474d-8a48-ee07601ff020",
    "alias" : "Browser - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "browser-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "73042fc0-e659-43db-9e10-3a029089129c",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1d6ec845-4fce-4ec7-bf32-4ae891cf35b4",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "15c34a53-6eba-49c9-a276-1a0a13e14613",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fb8acf0f-eadd-47ae-b4a8-e3c0c7742104",
    "alias" : "First broker login - Conditional 2FA",
    "description" : "Flow to determine if any 2FA is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "first-broker-login-conditional-credential",
      "authenticator" : "conditional-credential",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "webauthn-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-recovery-authn-code-form",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7be1b3c3-5e47-4895-90f9-549e28169d61",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ceca5e0d-f9e3-4702-82e0-57c72d744b47",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "60cea890-c58a-47c0-abd2-6d6c2492a401",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5b407c7f-70ef-4955-b370-019a0dd3bfe2",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e53cd772-f8c6-42fc-baaf-2876b426cd19",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f5e204b6-f3b3-452d-aecf-a2b576939cba",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4c18d540-c2e9-4158-a164-6063e97e39ab",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3da6fe89-4063-4a19-8f1b-0b373227ccb5",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "eee5d3ee-9d65-49a5-970c-1ebbceb44ccd",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1283f433-c0fb-43de-b169-7b93dda96ce8",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 60,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7cabf672-8911-433a-bda3-2e5ebac306a6",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional 2FA",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "742dcc13-b176-468b-9ad4-0b7aec5d63d4",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ec8a7702-7ceb-4495-beeb-5eb2c0b83e33",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "13b29eaf-a7b2-4898-bb22-7a68f0491b7d",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cb5252b4-3b77-463a-af2f-1b240e78c3e6",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "d1fdeaa4-725d-4525-96a4-9a94f0b15a7d",
    "alias" : "browser-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "70acd36a-3792-47f8-97a6-1d3758d31f71",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "2b99d978-cdfd-491c-aeee-de004f80b06f",
    "alias" : "first-broker-login-conditional-credential",
    "config" : {
      "credentials" : "webauthn-passwordless"
    }
  }, {
    "id" : "30940001-5f7d-4a6d-bfd7-a1316c66f9fa",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "UPDATE_EMAIL",
    "name" : "Update Email",
    "providerId" : "UPDATE_EMAIL",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 110,
    "config" : { }
  }, {
    "alias" : "idp_link",
    "name" : "Linking Identity Provider",
    "providerId" : "idp_link",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 120,
    "config" : { }
  }, {
    "alias" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "name" : "Recovery Authentication Codes",
    "providerId" : "CONFIGURE_RECOVERY_AUTHN_CODES",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 130,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "26.4.2",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "verifiableCredentialsEnabled" : false,
  "adminPermissionsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}