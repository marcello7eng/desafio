{
  "version": 3,
  "sources": ["../../../../../../node_modules/keycloak-js/lib/keycloak.js"],
  "sourcesContent": ["// @ts-check\n/**\n * @import {Acr, KeycloakAccountOptions, KeycloakAdapter, KeycloakConfig, KeycloakError, KeycloakFlow, KeycloakInitOptions, KeycloakLoginOptions, KeycloakLogoutOptions, KeycloakPkceMethod, KeycloakProfile, KeycloakRegisterOptions, KeycloakResourceAccess, KeycloakResponseMode, KeycloakResponseType, KeycloakRoles, KeycloakTokenParsed, OpenIdProviderMetadata} from \"./keycloak.ts\"\n */\n/*\n * Copyright 2016 Red Hat, Inc. and/or its affiliates\n * and other contributors as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CONTENT_TYPE_JSON = 'application/json'\n\n/**\n * @typedef {Object} Endpoints\n * @property {() => string} authorize\n * @property {() => string} token\n * @property {() => string} logout\n * @property {() => string} checkSessionIframe\n * @property {() => string=} thirdPartyCookiesIframe\n * @property {() => string} register\n * @property {() => string} userinfo\n */\n\n/**\n * @typedef {Object} LoginIframe\n * @property {boolean} enable\n * @property {((error: Error | null, value?: boolean) => void)[]} callbackList\n * @property {number} interval\n * @property {HTMLIFrameElement=} iframe\n * @property {string=} iframeOrigin\n */\n\nexport default class Keycloak {\n  /** @type {Pick<PromiseWithResolvers<boolean>, 'resolve' | 'reject'>[]} */\n  #refreshQueue = []\n  /** @type {KeycloakAdapter} */\n  #adapter\n  /** @type {boolean} */\n  #useNonce = true\n  /** @type {CallbackStorage} */\n  #callbackStorage\n  #logInfo = this.#createLogger(console.info)\n  #logWarn = this.#createLogger(console.warn)\n  /** @type {LoginIframe} */\n  #loginIframe = {\n    enable: true,\n    callbackList: [],\n    interval: 5\n  }\n\n  /** @type {KeycloakConfig} config */\n  #config\n  didInitialize = false\n  authenticated = false\n  loginRequired = false\n  /** @type {KeycloakResponseMode} */\n  responseMode = 'fragment'\n  /** @type {KeycloakResponseType} */\n  responseType = 'code'\n  /** @type {KeycloakFlow} */\n  flow = 'standard'\n  /** @type {number?} */\n  timeSkew = null\n  /** @type {string=} */\n  redirectUri\n  /** @type {string=} */\n  silentCheckSsoRedirectUri\n  /** @type {boolean} */\n  silentCheckSsoFallback = true\n  /** @type {KeycloakPkceMethod} */\n  pkceMethod = 'S256'\n  enableLogging = false\n  /** @type {'GET' | 'POST'} */\n  logoutMethod = 'GET'\n  /** @type {string=} */\n  scope\n  messageReceiveTimeout = 10000\n  /** @type {string=} */\n  idToken\n  /** @type {KeycloakTokenParsed=} */\n  idTokenParsed\n  /** @type {string=} */\n  token\n  /** @type {KeycloakTokenParsed=} */\n  tokenParsed\n  /** @type {string=} */\n  refreshToken\n  /** @type {KeycloakTokenParsed=} */\n  refreshTokenParsed\n  /** @type {string=} */\n  clientId\n  /** @type {string=} */\n  sessionId\n  /** @type {string=} */\n  subject\n  /** @type {string=} */\n  authServerUrl\n  /** @type {string=} */\n  realm\n  /** @type {KeycloakRoles=} */\n  realmAccess\n  /** @type {KeycloakResourceAccess=} */\n  resourceAccess\n  /** @type {KeycloakProfile=} */\n  profile\n  /** @type {{}=} */\n  userInfo\n  /** @type {Endpoints} */\n  endpoints\n  /** @type {number=} */\n  tokenTimeoutHandle\n  /** @type {() => void=} */\n  onAuthSuccess\n  /** @type {(errorData?: KeycloakError) => void=} */\n  onAuthError\n  /** @type {() => void=} */\n  onAuthRefreshSuccess\n  /** @type {() => void=} */\n  onAuthRefreshError\n  /** @type {() => void=} */\n  onTokenExpired\n  /** @type {() => void=} */\n  onAuthLogout\n  /** @type {(authenticated: boolean) => void=} */\n  onReady\n  /** @type {(status: 'success' | 'cancelled' | 'error', action: string) => void=} */\n  onActionUpdate\n\n  /**\n   * @param {KeycloakConfig} config\n   */\n  constructor (config) {\n    if (typeof config !== 'string' && !isObject(config)) {\n      throw new Error(\"The 'Keycloak' constructor must be provided with a configuration object, or a URL to a JSON configuration file.\")\n    }\n\n    if (isObject(config)) {\n      const requiredProperties = 'oidcProvider' in config\n        ? ['clientId']\n        : ['url', 'realm', 'clientId']\n\n      for (const property of requiredProperties) {\n        if (!(property in config)) {\n          throw new Error(`The configuration object is missing the required '${property}' property.`)\n        }\n      }\n    }\n\n    if (!globalThis.isSecureContext) {\n      this.#logWarn(\n        \"[KEYCLOAK] Keycloak JS must be used in a 'secure context' to function properly as it relies on browser APIs that are otherwise not available.\\n\" +\n                'Continuing to run your application insecurely will lead to unexpected behavior and breakage.\\n\\n' +\n                'For more information see: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts'\n      )\n    }\n\n    this.#config = config\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<boolean>}\n   */\n  async init (initOptions = {}) {\n    if (this.didInitialize) {\n      throw new Error(\"A 'Keycloak' instance can only be initialized once.\")\n    }\n\n    this.didInitialize = true\n    this.#callbackStorage = createCallbackStorage()\n\n    const adapters = ['default', 'cordova', 'cordova-native']\n\n    if (typeof initOptions.adapter === 'string' && adapters.includes(initOptions.adapter)) {\n      this.#adapter = this.#loadAdapter(initOptions.adapter)\n    } else if (typeof initOptions.adapter === 'object') {\n      this.#adapter = initOptions.adapter\n    } else if ('Cordova' in window || 'cordova' in window) {\n      this.#adapter = this.#loadAdapter('cordova')\n    } else {\n      this.#adapter = this.#loadAdapter('default')\n    }\n\n    if (typeof initOptions.useNonce !== 'undefined') {\n      this.#useNonce = initOptions.useNonce\n    }\n\n    if (typeof initOptions.checkLoginIframe !== 'undefined') {\n      this.#loginIframe.enable = initOptions.checkLoginIframe\n    }\n\n    if (initOptions.checkLoginIframeInterval) {\n      this.#loginIframe.interval = initOptions.checkLoginIframeInterval\n    }\n\n    if (initOptions.onLoad === 'login-required') {\n      this.loginRequired = true\n    }\n\n    if (initOptions.responseMode) {\n      if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {\n        this.responseMode = initOptions.responseMode\n      } else {\n        throw new Error('Invalid value for responseMode')\n      }\n    }\n\n    if (initOptions.flow) {\n      switch (initOptions.flow) {\n        case 'standard':\n          this.responseType = 'code'\n          break\n        case 'implicit':\n          this.responseType = 'id_token token'\n          break\n        case 'hybrid':\n          this.responseType = 'code id_token token'\n          break\n        default:\n          throw new Error('Invalid value for flow')\n      }\n      this.flow = initOptions.flow\n    }\n\n    if (typeof initOptions.timeSkew === 'number') {\n      this.timeSkew = initOptions.timeSkew\n    }\n\n    if (initOptions.redirectUri) {\n      this.redirectUri = initOptions.redirectUri\n    }\n\n    if (initOptions.silentCheckSsoRedirectUri) {\n      this.silentCheckSsoRedirectUri = initOptions.silentCheckSsoRedirectUri\n    }\n\n    if (typeof initOptions.silentCheckSsoFallback === 'boolean') {\n      this.silentCheckSsoFallback = initOptions.silentCheckSsoFallback\n    }\n\n    if (typeof initOptions.pkceMethod !== 'undefined') {\n      if (initOptions.pkceMethod !== 'S256' && initOptions.pkceMethod !== false) {\n        throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${initOptions.pkceMethod}.`)\n      }\n\n      this.pkceMethod = initOptions.pkceMethod\n    }\n\n    if (typeof initOptions.enableLogging === 'boolean') {\n      this.enableLogging = initOptions.enableLogging\n    }\n\n    if (initOptions.logoutMethod === 'POST') {\n      this.logoutMethod = 'POST'\n    }\n\n    if (typeof initOptions.scope === 'string') {\n      this.scope = initOptions.scope\n    }\n\n    if (typeof initOptions.messageReceiveTimeout === 'number' && initOptions.messageReceiveTimeout > 0) {\n      this.messageReceiveTimeout = initOptions.messageReceiveTimeout\n    }\n\n    await this.#loadConfig()\n    await this.#check3pCookiesSupported()\n    await this.#processInit(initOptions)\n\n    this.onReady?.(this.authenticated)\n\n    return this.authenticated\n  }\n\n  /**\n   * @param {\"default\" | \"cordova\" | \"cordova-native\"} type\n   * @returns {KeycloakAdapter}\n   */\n  #loadAdapter (type) {\n    if (type === 'default') {\n      return this.#loadDefaultAdapter()\n    }\n\n    if (type === 'cordova') {\n      this.#loginIframe.enable = false\n      return this.#loadCordovaAdapter()\n    }\n\n    if (type === 'cordova-native') {\n      this.#loginIframe.enable = false\n      return this.#loadCordovaNativeAdapter()\n    }\n\n    throw new Error('invalid adapter type: ' + type)\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadDefaultAdapter () {\n    /** @type {KeycloakAdapter['redirectUri']}{} */\n    const redirectUri = (options) => {\n      return options?.redirectUri || this.redirectUri || globalThis.location.href\n    }\n\n    return {\n      login: async (options) => {\n        window.location.assign(await this.createLoginUrl(options))\n        return await new Promise(() => {})\n      },\n\n      logout: async (options) => {\n        const logoutMethod = options?.logoutMethod ?? this.logoutMethod\n\n        if (logoutMethod === 'GET') {\n          window.location.replace(this.createLogoutUrl(options))\n          return\n        }\n\n        // Create form to send POST request.\n        const form = document.createElement('form')\n\n        form.setAttribute('method', 'POST')\n        form.setAttribute('action', this.createLogoutUrl(options))\n        form.style.display = 'none'\n\n        // Add data to form as hidden input fields.\n        const data = {\n          id_token_hint: this.idToken,\n          client_id: this.clientId,\n          post_logout_redirect_uri: redirectUri(options)\n        }\n\n        for (const [name, value] of Object.entries(data)) {\n          const input = document.createElement('input')\n\n          input.setAttribute('type', 'hidden')\n          input.setAttribute('name', name)\n          input.setAttribute('value', /** @type {string} */ (value))\n\n          form.appendChild(input)\n        }\n\n        // Append form to page and submit it to perform logout and redirect.\n        document.body.appendChild(form)\n        form.submit()\n      },\n\n      register: async (options) => {\n        window.location.assign(await this.createRegisterUrl(options))\n        return await new Promise(() => {})\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          window.location.href = accountUrl\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return await new Promise(() => {})\n      },\n\n      redirectUri\n    }\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaAdapter () {\n    /**\n     * @param {string} loginUrl\n     * @param {string} target\n     * @param {string} options\n     * @returns {WindowProxy | null}\n     */\n    const cordovaOpenWindowWrapper = (loginUrl, target, options) => {\n      if (window.cordova && window.cordova.InAppBrowser) {\n        // Use inappbrowser for IOS and Android if available\n        return window.cordova.InAppBrowser.open(loginUrl, target, options)\n      } else {\n        return window.open(loginUrl, target, options)\n      }\n    }\n\n    const shallowCloneCordovaOptions = (userOptions) => {\n      if (userOptions && userOptions.cordovaOptions) {\n        return Object.keys(userOptions.cordovaOptions).reduce((options, optionName) => {\n          options[optionName] = userOptions.cordovaOptions[optionName]\n          return options\n        }, {})\n      } else {\n        return {}\n      }\n    }\n\n    const formatCordovaOptions = (cordovaOptions) => {\n      return Object.keys(cordovaOptions).reduce((options, optionName) => {\n        options.push(optionName + '=' + cordovaOptions[optionName])\n        return options\n      }, []).join(',')\n    }\n\n    const createCordovaOptions = (userOptions) => {\n      const cordovaOptions = shallowCloneCordovaOptions(userOptions)\n      cordovaOptions.location = 'no'\n      if (userOptions && userOptions.prompt === 'none') {\n        cordovaOptions.hidden = 'yes'\n      }\n      return formatCordovaOptions(cordovaOptions)\n    }\n\n    const getCordovaRedirectUri = () => {\n      return this.redirectUri || 'http://localhost'\n    }\n\n    return {\n      login: async (options) => {\n        const cordovaOptions = createCordovaOptions(options)\n        const loginUrl = await this.createLoginUrl(options)\n        const ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions)\n        let completed = false\n        let closed = false\n\n        function closeBrowser () {\n          closed = true\n          ref.close()\n        };\n\n        return await new Promise((resolve, reject) => {\n          ref.addEventListener('loadstart', async (event) => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              const callback = this.#parseCallback(event.url)\n\n              try {\n                await this.#processCallback(callback)\n                resolve()\n              } catch (error) {\n                reject(error)\n              }\n              closeBrowser()\n              completed = true\n            }\n          })\n\n          ref.addEventListener('loaderror', async (event) => {\n            if (!completed) {\n              if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                const callback = this.#parseCallback(event.url)\n                try {\n                  await this.#processCallback(callback)\n                  resolve()\n                } catch (error) {\n                  reject(error)\n                }\n                closeBrowser()\n                completed = true\n              } else {\n                reject(new Error('Unable to process login.'))\n                closeBrowser()\n              }\n            }\n          })\n\n          ref.addEventListener('exit', function (event) {\n            if (!closed) {\n              reject(new Error('User closed the login window.'))\n            }\n          })\n        })\n      },\n\n      logout: async (options) => {\n        const logoutUrl = this.createLogoutUrl(options)\n        const ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes,clearcache=yes')\n        let error = false\n\n        ref.addEventListener('loadstart', (event) => {\n          if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n            ref.close()\n          }\n        })\n\n        ref.addEventListener('loaderror', (event) => {\n          if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n            ref.close()\n          } else {\n            error = true\n            ref.close()\n          }\n        })\n\n        await new Promise((resolve, reject) => {\n          ref.addEventListener('exit', () => {\n            if (error) {\n              reject(new Error('User closed the login window.'))\n            } else {\n              this.clearToken()\n              resolve()\n            }\n          })\n        })\n      },\n\n      register: async (options) => {\n        const registerUrl = await this.createRegisterUrl()\n        const cordovaOptions = createCordovaOptions(options)\n        const ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions)\n\n        /** @type {Promise<void>} */\n        const promise = new Promise((resolve, reject) => {\n          ref.addEventListener('loadstart', async (event) => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close()\n              const oauth = this.#parseCallback(event.url)\n\n              try {\n                await this.#processCallback(oauth)\n                resolve()\n              } catch (error) {\n                reject(error)\n              }\n            }\n          })\n        })\n\n        await promise\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          const ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no')\n          ref.addEventListener('loadstart', function (event) {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close()\n            }\n          })\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n      },\n\n      redirectUri: () => {\n        return getCordovaRedirectUri()\n      }\n    }\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaNativeAdapter () {\n    /* global universalLinks */\n    return {\n      login: async (options) => {\n        const loginUrl = await this.createLoginUrl(options)\n\n        await new Promise((resolve, reject) => {\n          universalLinks.subscribe('keycloak', async (event) => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            const oauth = this.#parseCallback(event.url)\n\n            try {\n              await this.#processCallback(oauth)\n              resolve()\n            } catch (error) {\n              reject(error)\n            }\n          })\n\n          window.cordova.plugins.browsertab.openUrl(loginUrl)\n        })\n      },\n\n      logout: async (options) => {\n        const logoutUrl = this.createLogoutUrl(options)\n\n        await new Promise((resolve) => {\n          universalLinks.subscribe('keycloak', () => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            this.clearToken()\n            resolve()\n          })\n\n          window.cordova.plugins.browsertab.openUrl(logoutUrl)\n        })\n      },\n\n      register: async (options) => {\n        const registerUrl = await this.createRegisterUrl(options)\n\n        await new Promise((resolve, reject) => {\n          universalLinks.subscribe('keycloak', async (event) => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            const oauth = this.#parseCallback(event.url)\n            try {\n              await this.#processCallback(oauth)\n              resolve()\n            } catch (error) {\n              reject(error)\n            }\n          })\n\n          window.cordova.plugins.browsertab.openUrl(registerUrl)\n        })\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          window.cordova.plugins.browsertab.openUrl(accountUrl)\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n      },\n\n      redirectUri: (options) => {\n        if (options && options.redirectUri) {\n          return options.redirectUri\n        } else if (this.redirectUri) {\n          return this.redirectUri\n        } else {\n          return 'http://localhost'\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #loadConfig () {\n    if (typeof this.#config === 'string') {\n      const jsonConfig = await fetchJsonConfig(this.#config)\n      this.authServerUrl = jsonConfig['auth-server-url']\n      this.realm = jsonConfig.realm\n      this.clientId = jsonConfig.resource\n      this.#setupEndpoints()\n    } else {\n      this.clientId = this.#config.clientId\n\n      if ('oidcProvider' in this.#config) {\n        await this.#loadOidcConfig(this.#config.oidcProvider)\n      } else {\n        this.authServerUrl = this.#config.url\n        this.realm = this.#config.realm\n        this.#setupEndpoints()\n      }\n    }\n  }\n\n  /**\n   * @returns {void}\n   */\n  #setupEndpoints () {\n    this.endpoints = {\n      authorize: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/auth'\n      },\n      token: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/token'\n      },\n      logout: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/logout'\n      },\n      checkSessionIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html'\n      },\n      thirdPartyCookiesIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/3p-cookies/step1.html'\n      },\n      register: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/registrations'\n      },\n      userinfo: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/userinfo'\n      }\n    }\n  }\n\n  /**\n   * @param {string | OpenIdProviderMetadata} oidcProvider\n   * @returns {Promise<void>}\n   */\n  async #loadOidcConfig (oidcProvider) {\n    if (typeof oidcProvider === 'string') {\n      const url = `${stripTrailingSlash(oidcProvider)}/.well-known/openid-configuration`\n      const openIdConfig = await fetchOpenIdConfig(url)\n      this.#setupOidcEndpoints(openIdConfig)\n    } else {\n      this.#setupOidcEndpoints(oidcProvider)\n    }\n  }\n\n  /**\n   * @param {OpenIdProviderMetadata} config\n   * @returns {void}\n   */\n  #setupOidcEndpoints (config) {\n    this.endpoints = {\n      authorize () {\n        return config.authorization_endpoint\n      },\n      token () {\n        return config.token_endpoint\n      },\n      logout () {\n        if (!config.end_session_endpoint) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.end_session_endpoint\n      },\n      checkSessionIframe () {\n        if (!config.check_session_iframe) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.check_session_iframe\n      },\n      register () {\n        throw new Error('Redirection to \"Register user\" page not supported in standard OIDC mode')\n      },\n      userinfo () {\n        if (!config.userinfo_endpoint) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.userinfo_endpoint\n      }\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #check3pCookiesSupported () {\n    if ((!this.#loginIframe.enable && !this.silentCheckSsoRedirectUri) || typeof this.endpoints.thirdPartyCookiesIframe !== 'function') {\n      return\n    }\n\n    const iframe = document.createElement('iframe')\n    iframe.setAttribute('src', this.endpoints.thirdPartyCookiesIframe())\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-3p-check-iframe')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    /** @type {Promise<void>} */\n    const promise = new Promise((resolve) => {\n      /**\n       * @param {MessageEvent} event\n       */\n      const messageCallback = (event) => {\n        if (iframe.contentWindow !== event.source) {\n          return\n        }\n\n        if (event.data !== 'supported' && event.data !== 'unsupported') {\n          return\n        } else if (event.data === 'unsupported') {\n          this.#logWarn(\n            '[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:\\n\\n' +\n                        ' - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).\\n' +\n                        ' - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).\\n\\n' +\n                        'For more information see: https://www.keycloak.org/securing-apps/javascript-adapter#_modern_browsers'\n          )\n\n          this.#loginIframe.enable = false\n          if (this.silentCheckSsoFallback) {\n            this.silentCheckSsoRedirectUri = undefined\n          }\n        }\n\n        document.body.removeChild(iframe)\n        window.removeEventListener('message', messageCallback)\n        resolve()\n      }\n\n      window.addEventListener('message', messageCallback, false)\n    })\n\n    return await applyTimeoutToPromise(promise, this.messageReceiveTimeout, 'Timeout when waiting for 3rd party check iframe message.')\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<void>}\n   */\n  async #processInit (initOptions) {\n    const callback = this.#parseCallback(window.location.href)\n\n    if (callback?.redirectUri) {\n      window.history.replaceState(window.history.state, '', callback.redirectUri)\n    }\n\n    if (callback && callback.valid) {\n      await this.#setupCheckLoginIframe()\n      await this.#processCallback(callback)\n      return\n    }\n\n    /** @param {boolean} prompt */\n    const doLogin = async (prompt) => {\n      /** @type {KeycloakLoginOptions} */\n      const options = {}\n\n      if (!prompt) {\n        options.prompt = 'none'\n      }\n\n      if (initOptions.locale) {\n        options.locale = initOptions.locale\n      }\n\n      await this.login(options)\n    }\n\n    const onLoad = async () => {\n      switch (initOptions.onLoad) {\n        case 'check-sso':\n          if (this.#loginIframe.enable) {\n            await this.#setupCheckLoginIframe()\n            const unchanged = await this.#checkLoginIframe()\n\n            if (!unchanged) {\n              this.silentCheckSsoRedirectUri ? await this.#checkSsoSilently() : await doLogin(false)\n            }\n          } else {\n            this.silentCheckSsoRedirectUri ? await this.#checkSsoSilently() : await doLogin(false)\n          }\n          break\n        case 'login-required':\n          await doLogin(true)\n          break\n        default:\n          throw new Error('Invalid value for onLoad')\n      }\n    }\n\n    if (initOptions.token && initOptions.refreshToken) {\n      this.#setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken)\n\n      if (this.#loginIframe.enable) {\n        await this.#setupCheckLoginIframe()\n        const unchanged = await this.#checkLoginIframe()\n\n        if (unchanged) {\n          this.onAuthSuccess?.()\n          this.#scheduleCheckIframe()\n        }\n      } else {\n        try {\n          await this.updateToken(-1)\n          this.onAuthSuccess?.()\n        } catch (error) {\n          this.onAuthError?.()\n          if (initOptions.onLoad) {\n            await onLoad()\n          } else {\n            throw error\n          }\n        }\n      }\n    } else if (initOptions.onLoad) {\n      await onLoad()\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #setupCheckLoginIframe () {\n    if (!this.#loginIframe.enable || this.#loginIframe.iframe) {\n      return\n    }\n\n    const iframe = document.createElement('iframe')\n    this.#loginIframe.iframe = iframe\n    iframe.setAttribute('src', this.endpoints.checkSessionIframe())\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-session-iframe')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    /**\n     * @param {MessageEvent} event\n     */\n    const messageCallback = (event) => {\n      if (event.origin !== this.#loginIframe.iframeOrigin || this.#loginIframe.iframe?.contentWindow !== event.source) {\n        return\n      }\n\n      if (!(event.data === 'unchanged' || event.data === 'changed' || event.data === 'error')) {\n        return\n      }\n\n      if (event.data !== 'unchanged') {\n        this.clearToken()\n      }\n\n      const callbacks = this.#loginIframe.callbackList\n      this.#loginIframe.callbackList = []\n\n      for (const callback of callbacks.reverse()) {\n        if (event.data === 'error') {\n          callback(new Error('Error while checking login iframe'))\n        } else {\n          callback(null, event.data === 'unchanged')\n        }\n      }\n    }\n\n    window.addEventListener('message', messageCallback, false)\n\n    /** @type {Promise<void>} */\n    const promise = new Promise((resolve) => {\n      iframe.addEventListener('load', () => {\n        const authUrl = this.endpoints.authorize()\n        if (authUrl.startsWith('/')) {\n          this.#loginIframe.iframeOrigin = globalThis.location.origin\n        } else {\n          this.#loginIframe.iframeOrigin = new URL(authUrl).origin\n        }\n        resolve()\n      })\n    })\n\n    await promise\n  }\n\n  /**\n   * @returns {Promise<boolean | undefined>}\n   */\n  async #checkLoginIframe () {\n    if (!this.#loginIframe.iframe || !this.#loginIframe.iframeOrigin) {\n      return\n    }\n\n    const message = `${this.clientId} ${(this.sessionId ? this.sessionId : '')}`\n    const origin = this.#loginIframe.iframeOrigin\n\n    /** @type {Promise<boolean>} */\n    const promise = new Promise((resolve, reject) => {\n      /** @type {(error: Error | null, value?: boolean) => void} */\n      const callback = (error, result) => error ? reject(error) : resolve(/** @type {boolean} */ (result))\n\n      this.#loginIframe.callbackList.push(callback)\n\n      if (this.#loginIframe.callbackList.length === 1) {\n        this.#loginIframe.iframe?.contentWindow?.postMessage(message, origin)\n      }\n    })\n\n    return await promise\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #checkSsoSilently () {\n    const iframe = document.createElement('iframe')\n    const src = await this.createLoginUrl({ prompt: 'none', redirectUri: this.silentCheckSsoRedirectUri })\n    iframe.setAttribute('src', src)\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-silent-check-sso')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    return await new Promise((resolve, reject) => {\n      /**\n       * @param {MessageEvent} event\n       */\n      const messageCallback = async (event) => {\n        if (event.origin !== window.location.origin || iframe.contentWindow !== event.source) {\n          return\n        }\n\n        const oauth = this.#parseCallback(event.data)\n\n        try {\n          await this.#processCallback(oauth)\n          resolve()\n        } catch (error) {\n          reject(error)\n        }\n\n        document.body.removeChild(iframe)\n        window.removeEventListener('message', messageCallback)\n      }\n\n      window.addEventListener('message', messageCallback)\n    })\n  };\n\n  /**\n   * @param {string} url\n   */\n  #parseCallback (url) {\n    const oauth = this.#parseCallbackUrl(url)\n    if (!oauth) {\n      return\n    }\n\n    const oauthState = this.#callbackStorage.get(oauth.state)\n\n    if (oauthState) {\n      oauth.valid = true\n      oauth.redirectUri = oauthState.redirectUri\n      oauth.storedNonce = oauthState.nonce\n      oauth.prompt = oauthState.prompt\n      oauth.pkceCodeVerifier = oauthState.pkceCodeVerifier\n      oauth.loginOptions = oauthState.loginOptions\n    }\n\n    return oauth\n  }\n\n  /**\n   * @param {string} urlString\n   */\n  #parseCallbackUrl (urlString) {\n    let supportedParams = []\n    switch (this.flow) {\n      case 'standard':\n        supportedParams = ['code', 'state', 'session_state', 'kc_action_status', 'kc_action', 'iss']\n        break\n      case 'implicit':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss']\n        break\n      case 'hybrid':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'code', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss']\n        break\n    }\n\n    supportedParams.push('error')\n    supportedParams.push('error_description')\n    supportedParams.push('error_uri')\n\n    const url = new URL(urlString)\n    let redirectUri = ''\n    let parsed\n\n    if (this.responseMode === 'query' && url.searchParams.size > 0) {\n      parsed = this.#parseCallbackParams(url.search, supportedParams)\n      url.search = parsed.paramsString\n      redirectUri = url.toString()\n    } else if (this.responseMode === 'fragment' && url.hash.length > 0) {\n      parsed = this.#parseCallbackParams(url.hash.substring(1), supportedParams)\n      url.hash = ''\n      redirectUri = url.toString()\n    }\n\n    if (parsed?.oauthParams) {\n      if (this.flow === 'standard' || this.flow === 'hybrid') {\n        if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri\n          return parsed.oauthParams\n        }\n      } else if (this.flow === 'implicit') {\n        if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri\n          return parsed.oauthParams\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} ParsedCallbackParams\n   * @property {string} paramsString\n   * @property {Record<string, string | undefined>} oauthParams\n   */\n\n  /**\n   * @param {string} paramsString\n   * @param {string[]} supportedParams\n   * @returns {ParsedCallbackParams}\n   */\n  #parseCallbackParams (paramsString, supportedParams) {\n    const params = new URLSearchParams(paramsString)\n    /** @type {Record<string, string>} */\n    const oauthParams = {}\n\n    for (const [key, value] of Array.from(params.entries())) {\n      if (supportedParams.includes(key)) {\n        oauthParams[key] = value\n        params.delete(key)\n      }\n    }\n\n    return {\n      paramsString: params.toString(),\n      oauthParams\n    }\n  }\n\n  async #processCallback (oauth) {\n    const { code, error, prompt } = oauth\n    let timeLocal = new Date().getTime()\n\n    /**\n     * @param {string} accessToken\n     * @param {string=} refreshToken\n     * @param {string=} idToken\n     */\n    const authSuccess = (accessToken, refreshToken, idToken) => {\n      timeLocal = (timeLocal + new Date().getTime()) / 2\n\n      this.#setToken(accessToken, refreshToken, idToken, timeLocal)\n\n      if (this.#useNonce && (this.idTokenParsed && this.idTokenParsed.nonce !== oauth.storedNonce)) {\n        this.#logInfo('[KEYCLOAK] Invalid nonce, clearing token')\n        this.clearToken()\n        throw new Error('Invalid nonce.')\n      }\n    }\n\n    if (oauth.kc_action_status) {\n      this.onActionUpdate && this.onActionUpdate(oauth.kc_action_status, oauth.kc_action)\n    }\n\n    if (error) {\n      if (prompt !== 'none') {\n        if (oauth.error_description && oauth.error_description === 'authentication_expired') {\n          await this.login(oauth.loginOptions)\n        } else {\n          const errorData = { error, error_description: oauth.error_description }\n          this.onAuthError?.(errorData)\n          throw errorData\n        }\n      }\n      return\n    } else if ((this.flow !== 'standard') && (oauth.access_token || oauth.id_token)) {\n      authSuccess(oauth.access_token, undefined, oauth.id_token)\n      this.onAuthSuccess?.()\n    }\n\n    if ((this.flow !== 'implicit') && code) {\n      try {\n        const response = await fetchAccessToken(this.endpoints.token(), code, /** @type {string} */ (this.clientId), oauth.redirectUri, oauth.pkceCodeVerifier)\n        authSuccess(response.access_token, response.refresh_token, response.id_token)\n\n        if (this.flow === 'standard') {\n          this.onAuthSuccess?.()\n        }\n\n        this.#scheduleCheckIframe()\n      } catch (error) {\n        this.onAuthError?.()\n        throw error\n      }\n    }\n  }\n\n  async #scheduleCheckIframe () {\n    if (this.#loginIframe.enable && this.token) {\n      await waitForTimeout(this.#loginIframe.interval * 1000)\n      const unchanged = await this.#checkLoginIframe()\n\n      if (unchanged) {\n        await this.#scheduleCheckIframe()\n      }\n    }\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<void>}\n   */\n  login (options) {\n    return this.#adapter.login(options)\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<string>}\n   */\n  async createLoginUrl (options) {\n    const state = createUUID()\n    const nonce = createUUID()\n    const redirectUri = this.#adapter.redirectUri(options)\n    /** @type {CallbackState} */\n    const callbackState = {\n      state,\n      nonce,\n      redirectUri,\n      loginOptions: options\n    }\n\n    if (options?.prompt) {\n      callbackState.prompt = options.prompt\n    }\n\n    const url = options?.action === 'register'\n      ? this.endpoints.register()\n      : this.endpoints.authorize()\n\n    let scope = options?.scope || this.scope\n    const scopeValues = scope ? scope.split(' ') : []\n\n    // Ensure the 'openid' scope is always included.\n    if (!scopeValues.includes('openid')) {\n      scopeValues.unshift('openid')\n    }\n\n    scope = scopeValues.join(' ')\n\n    const params = new URLSearchParams([\n      ['client_id', /** @type {string} */ (this.clientId)],\n      // The endpoint URI MUST NOT include a fragment component.\n      // https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2\n      ['redirect_uri', stripHash(redirectUri)],\n      ['state', state],\n      ['response_mode', this.responseMode],\n      ['response_type', this.responseType],\n      ['scope', scope]\n    ])\n\n    if (this.#useNonce) {\n      params.append('nonce', nonce)\n    }\n\n    if (options?.prompt) {\n      params.append('prompt', options.prompt)\n    }\n\n    if (typeof options?.maxAge === 'number') {\n      params.append('max_age', options.maxAge.toString())\n    }\n\n    if (options?.loginHint) {\n      params.append('login_hint', options.loginHint)\n    }\n\n    if (options?.idpHint) {\n      params.append('kc_idp_hint', options.idpHint)\n    }\n\n    if (options?.action && options.action !== 'register') {\n      params.append('kc_action', options.action)\n    }\n\n    if (options?.locale) {\n      params.append('ui_locales', options.locale)\n    }\n\n    if (options?.acr) {\n      params.append('claims', buildClaimsParameter(options.acr))\n    }\n\n    if (options?.acrValues) {\n      params.append('acr_values', options.acrValues)\n    }\n\n    if (this.pkceMethod) {\n      try {\n        const codeVerifier = generateCodeVerifier(96)\n        const pkceChallenge = await generatePkceChallenge(this.pkceMethod, codeVerifier)\n\n        callbackState.pkceCodeVerifier = codeVerifier\n\n        params.append('code_challenge', pkceChallenge)\n        params.append('code_challenge_method', this.pkceMethod)\n      } catch (error) {\n        throw new Error('Failed to generate PKCE challenge.', { cause: error })\n      }\n    }\n\n    this.#callbackStorage.add(callbackState)\n\n    return `${url}?${params.toString()}`\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {Promise<void>}\n   */\n  logout (options) {\n    return this.#adapter.logout(options)\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {string}\n   */\n  createLogoutUrl (options) {\n    const logoutMethod = options?.logoutMethod ?? this.logoutMethod\n    const url = this.endpoints.logout()\n\n    if (logoutMethod === 'POST') {\n      return url\n    }\n\n    const params = new URLSearchParams([\n      ['client_id', /** @type {string} */ (this.clientId)],\n      ['post_logout_redirect_uri', this.#adapter.redirectUri(options)]\n    ])\n\n    if (this.idToken) {\n      params.append('id_token_hint', this.idToken)\n    }\n\n    return `${url}?${params.toString()}`\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<void>}\n   */\n  register (options) {\n    return this.#adapter.register(options)\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<string>}\n   */\n  createRegisterUrl (options) {\n    return this.createLoginUrl({ ...options, action: 'register' })\n  }\n\n  /**\n   * @param {KeycloakAccountOptions} [options]\n   * @returns {string}\n   */\n  createAccountUrl (options) {\n    const url = this.#getRealmUrl()\n\n    if (!url) {\n      throw new Error('Unable to create account URL, make sure the adapter is not configured using a generic OIDC provider.')\n    }\n\n    const params = new URLSearchParams([\n      ['referrer', /** @type {string} */ (this.clientId)],\n      ['referrer_uri', this.#adapter.redirectUri(options)]\n    ])\n\n    return `${url}/account?${params.toString()}`\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  accountManagement () {\n    return this.#adapter.accountManagement()\n  }\n\n  /**\n   * @param {string} role\n   * @returns {boolean}\n   */\n  hasRealmRole (role) {\n    const access = this.realmAccess\n    return !!access && access.roles.indexOf(role) >= 0\n  }\n\n  /**\n   * @param {string} role\n   * @param {string} [resource]\n   * @returns {boolean}\n   */\n  hasResourceRole (role, resource) {\n    if (!this.resourceAccess) {\n      return false\n    }\n\n    const access = this.resourceAccess[resource || /** @type {string} */ (this.clientId)]\n    return !!access && access.roles.indexOf(role) >= 0\n  }\n\n  /**\n   * @returns {Promise<KeycloakProfile>}\n   */\n  async loadUserProfile () {\n    const realmUrl = this.#getRealmUrl()\n\n    if (!realmUrl) {\n      throw new Error('Unable to load user profile, make sure the adapter is not configured using a generic OIDC provider.')\n    }\n\n    const url = `${realmUrl}/account`\n    /** @type {KeycloakProfile} */\n    const profile = await fetchJSON(url, {\n      headers: [buildAuthorizationHeader(this.token)]\n    })\n\n    return (this.profile = profile)\n  }\n\n  /**\n   * @returns {Promise<{}>}\n   */\n  async loadUserInfo () {\n    const url = this.endpoints.userinfo()\n    /** @type {{}} */\n    const userInfo = await fetchJSON(url, {\n      headers: [buildAuthorizationHeader(this.token)]\n    })\n\n    return (this.userInfo = userInfo)\n  }\n\n  /**\n   * @param {number} [minValidity]\n   * @returns {boolean}\n   */\n  isTokenExpired (minValidity) {\n    if (!this.tokenParsed || (!this.refreshToken && this.flow !== 'implicit')) {\n      throw new Error('Not authenticated')\n    }\n\n    if (this.timeSkew == null) {\n      this.#logInfo('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set')\n      return true\n    }\n\n    if (typeof this.tokenParsed.exp !== 'number') {\n      return false\n    }\n\n    let expiresIn = this.tokenParsed.exp - Math.ceil(new Date().getTime() / 1000) + this.timeSkew\n    if (minValidity) {\n      if (isNaN(minValidity)) {\n        throw new Error('Invalid minValidity')\n      }\n      expiresIn -= minValidity\n    }\n    return expiresIn < 0\n  }\n\n  /**\n   * @param {number} minValidity\n   * @returns {Promise<boolean>}\n   */\n  async updateToken (minValidity) {\n    if (!this.refreshToken) {\n      throw new Error('Unable to update token, no refresh token available.')\n    }\n\n    minValidity = minValidity || 5\n\n    if (this.#loginIframe.enable) {\n      await this.#checkLoginIframe()\n    }\n\n    let refreshToken = false\n\n    if (minValidity === -1) {\n      refreshToken = true\n      this.#logInfo('[KEYCLOAK] Refreshing token: forced refresh')\n    } else if (!this.tokenParsed || this.isTokenExpired(minValidity)) {\n      refreshToken = true\n      this.#logInfo('[KEYCLOAK] Refreshing token: token expired')\n    }\n\n    if (!refreshToken) {\n      return false\n    }\n\n    /** @type {PromiseWithResolvers<boolean>} */\n    const { promise, resolve, reject } = Promise.withResolvers()\n\n    this.#refreshQueue.push({ resolve, reject })\n\n    if (this.#refreshQueue.length === 1) {\n      const url = this.endpoints.token()\n      let timeLocal = new Date().getTime()\n\n      try {\n        const response = await fetchRefreshToken(url, this.refreshToken, /** @type {string} */ (this.clientId))\n        this.#logInfo('[KEYCLOAK] Token refreshed')\n\n        timeLocal = (timeLocal + new Date().getTime()) / 2\n\n        this.#setToken(response.access_token, response.refresh_token, response.id_token, timeLocal)\n\n        this.onAuthRefreshSuccess?.()\n        for (let p = this.#refreshQueue.pop(); p != null; p = this.#refreshQueue.pop()) {\n          p.resolve(true)\n        }\n      } catch (error) {\n        this.#logWarn('[KEYCLOAK] Failed to refresh token')\n\n        if (error instanceof NetworkError && error.response.status === 400) {\n          this.clearToken()\n        }\n\n        this.onAuthRefreshError?.()\n        for (let p = this.#refreshQueue.pop(); p != null; p = this.#refreshQueue.pop()) {\n          p.reject(error)\n        }\n      }\n    }\n\n    return await promise\n  }\n\n  clearToken () {\n    if (this.token) {\n      this.#setToken()\n      this.onAuthLogout?.()\n      if (this.loginRequired) {\n        this.login()\n      }\n    }\n  }\n\n  /**\n   * @param {string} [token]\n   * @param {string} [refreshToken]\n   * @param {string} [idToken]\n   * @param {number} [timeLocal]\n   */\n  #setToken (token, refreshToken, idToken, timeLocal) {\n    if (this.tokenTimeoutHandle) {\n      clearTimeout(this.tokenTimeoutHandle)\n      this.tokenTimeoutHandle = undefined\n    }\n\n    if (refreshToken) {\n      this.refreshToken = refreshToken\n      this.refreshTokenParsed = decodeToken(refreshToken)\n    } else {\n      delete this.refreshToken\n      delete this.refreshTokenParsed\n    }\n\n    if (idToken) {\n      this.idToken = idToken\n      this.idTokenParsed = decodeToken(idToken)\n    } else {\n      delete this.idToken\n      delete this.idTokenParsed\n    }\n\n    if (token) {\n      this.token = token\n      this.tokenParsed = decodeToken(token)\n      this.sessionId = this.tokenParsed.sid\n      this.authenticated = true\n      this.subject = this.tokenParsed.sub\n      this.realmAccess = this.tokenParsed.realm_access\n      this.resourceAccess = this.tokenParsed.resource_access\n\n      if (timeLocal) {\n        this.timeSkew = Math.floor(timeLocal / 1000) - this.tokenParsed.iat\n      }\n\n      if (this.timeSkew !== null) {\n        this.#logInfo('[KEYCLOAK] Estimated time difference between browser and server is ' + this.timeSkew + ' seconds')\n\n        if (this.onTokenExpired) {\n          const expiresIn = (this.tokenParsed.exp - (new Date().getTime() / 1000) + this.timeSkew) * 1000\n          this.#logInfo('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s')\n          if (expiresIn <= 0) {\n            this.onTokenExpired()\n          } else {\n            this.tokenTimeoutHandle = window.setTimeout(this.onTokenExpired, expiresIn)\n          }\n        }\n      }\n    } else {\n      delete this.token\n      delete this.tokenParsed\n      delete this.subject\n      delete this.realmAccess\n      delete this.resourceAccess\n\n      this.authenticated = false\n    }\n  }\n\n  /**\n   * @returns {string=}\n   */\n  #getRealmUrl () {\n    if (typeof this.authServerUrl === 'undefined') {\n      return\n    }\n\n    return `${stripTrailingSlash(this.authServerUrl)}/realms/${encodeURIComponent(/** @type {string} */ (this.realm))}`\n  }\n\n  /**\n   * @param {Function} fn\n   * @returns {(message: string) => void}\n   */\n  #createLogger (fn) {\n    return (message) => {\n      if (this.enableLogging) {\n        fn.call(console, message)\n      }\n    }\n  }\n}\n\n/**\n * @returns {string}\n */\nfunction createUUID () {\n  if (typeof crypto === 'undefined' || typeof crypto.randomUUID === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return crypto.randomUUID()\n}\n\n/**\n * @param {Acr} requestedAcr\n * @returns {string}\n */\nfunction buildClaimsParameter (requestedAcr) {\n  return JSON.stringify({\n    id_token: {\n      acr: requestedAcr\n    }\n  })\n}\n\n/**\n * @param {number} len\n * @returns {string}\n */\nfunction generateCodeVerifier (len) {\n  return generateRandomString(len, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789')\n}\n\n/**\n * @param {string} pkceMethod\n * @param {string} codeVerifier\n * @returns {Promise<string>}\n */\nasync function generatePkceChallenge (pkceMethod, codeVerifier) {\n  if (pkceMethod !== 'S256') {\n    throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${pkceMethod}'.`)\n  }\n\n  // hash codeVerifier, then encode as url-safe base64 without padding\n  const hashBytes = new Uint8Array(await sha256Digest(codeVerifier))\n  const encodedHash = bytesToBase64(hashBytes)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '')\n\n  return encodedHash\n}\n\n/**\n * @param {number} len\n * @param {string} alphabet\n * @returns {string}\n */\nfunction generateRandomString (len, alphabet) {\n  const randomData = generateRandomData(len)\n  const chars = new Array(len)\n  for (let i = 0; i < len; i++) {\n    chars[i] = alphabet.charCodeAt(randomData[i] % alphabet.length)\n  }\n  return String.fromCharCode.apply(null, chars)\n}\n\n/**\n * @param {number} len\n * @returns {Uint8Array<ArrayBuffer>}\n */\nfunction generateRandomData (len) {\n  if (typeof crypto === 'undefined' || typeof crypto.getRandomValues === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return crypto.getRandomValues(new Uint8Array(len))\n}\n\n/**\n * Function to extend existing native Promise with timeout\n *\n * @template T\n * @param {Promise<T>} promise\n * @param {number} timeout\n * @param {string} errorMessage\n * @returns {Promise<T>}\n */\nfunction applyTimeoutToPromise (promise, timeout, errorMessage) {\n  /** @type {number} */\n  let timeoutHandle\n  const timeoutPromise = new Promise(function (resolve, reject) {\n    timeoutHandle = window.setTimeout(function () {\n      reject(new Error(errorMessage || 'Promise is not settled within timeout of ' + timeout + 'ms'))\n    }, timeout)\n  })\n\n  return Promise.race([promise, timeoutPromise]).finally(function () {\n    clearTimeout(timeoutHandle)\n  })\n}\n\n/**\n * @returns {CallbackStorage}\n */\nfunction createCallbackStorage () {\n  try {\n    return new LocalStorage()\n  } catch (err) {\n    return new CookieStorage()\n  }\n}\n\nconst STORAGE_KEY_PREFIX = 'kc-callback-'\n\n/**\n * @typedef {Object} CallbackState\n * @property {string} state\n * @property {string} nonce\n * @property {string} redirectUri\n * @property {KeycloakLoginOptions} [loginOptions]\n * @property {KeycloakLoginOptions['prompt']} [prompt]\n * @property {string} [pkceCodeVerifier]\n */\n\n/**\n * @typedef {Object} CallbackStorage\n * @property {(state?: string) => CallbackState | null} get\n * @property {(state: CallbackState) => void} add\n */\n\n/**\n * @implements {CallbackStorage}\n */\nclass LocalStorage {\n  constructor () {\n    globalThis.localStorage.setItem('kc-test', 'test')\n    globalThis.localStorage.removeItem('kc-test')\n  }\n\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get (state) {\n    if (!state) {\n      return null\n    }\n\n    this.#clearInvalidValues()\n\n    const key = STORAGE_KEY_PREFIX + state\n    const value = globalThis.localStorage.getItem(key)\n\n    if (value) {\n      globalThis.localStorage.removeItem(key)\n      return JSON.parse(value)\n    }\n\n    return null\n  };\n\n  /**\n   * @param {CallbackState} state\n   */\n  add (state) {\n    this.#clearInvalidValues()\n\n    const key = STORAGE_KEY_PREFIX + state.state\n    const value = JSON.stringify({\n      ...state,\n      // Set the expiry time to 1 hour from now.\n      expires: Date.now() + (60 * 60 * 1000)\n    })\n\n    try {\n      globalThis.localStorage.setItem(key, value)\n    } catch (error) {\n      // If the storage is full, clear all known values and try again.\n      this.#clearAllValues()\n      globalThis.localStorage.setItem(key, value)\n    }\n  };\n\n  /**\n   * Clears all values from local storage that are no longer valid.\n   */\n  #clearInvalidValues () {\n    const currentTime = Date.now()\n\n    for (const [key, value] of this.#getStoredEntries()) {\n      // Attempt to parse the expiry time from the value.\n      const expiry = this.#parseExpiry(value)\n\n      // Discard the value if it is malformed or expired.\n      if (expiry === null || expiry < currentTime) {\n        globalThis.localStorage.removeItem(key)\n      }\n    }\n  }\n\n  /**\n   * Clears all known values from local storage.\n   */\n  #clearAllValues () {\n    for (const [key] of this.#getStoredEntries()) {\n      globalThis.localStorage.removeItem(key)\n    }\n  }\n\n  /**\n   * Gets all entries stored in local storage that are known to be managed by this class.\n   * @returns {[string, string][]} An array of key-value pairs.\n   */\n  #getStoredEntries () {\n    return Object.entries(globalThis.localStorage).filter(([key]) => key.startsWith(STORAGE_KEY_PREFIX))\n  }\n\n  /**\n   * Parses the expiry time from a value stored in local storage.\n   * @param {string} value\n   * @returns {number | null} The expiry time in milliseconds, or `null` if the value is malformed.\n   */\n  #parseExpiry (value) {\n    let parsedValue\n\n    // Attempt to parse the value as JSON.\n    try {\n      parsedValue = JSON.parse(value)\n    } catch (error) {\n      return null\n    }\n\n    // Attempt to extract the 'expires' property.\n    if (isObject(parsedValue) && 'expires' in parsedValue && typeof parsedValue.expires === 'number') {\n      return parsedValue.expires\n    }\n\n    return null\n  }\n}\n\n/**\n * @implements {CallbackStorage}\n */\nclass CookieStorage {\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get (state) {\n    if (!state) {\n      return null\n    }\n\n    const value = this.#getCookie(STORAGE_KEY_PREFIX + state)\n    this.#setCookie(STORAGE_KEY_PREFIX + state, '', this.#cookieExpiration(-100))\n    if (value) {\n      return JSON.parse(value)\n    }\n\n    return null\n  }\n\n  /**\n   * @param {CallbackState} state\n   */\n  add (state) {\n    this.#setCookie(STORAGE_KEY_PREFIX + state.state, JSON.stringify(state), this.#cookieExpiration(60))\n  }\n\n  /**\n   * @param {string} key\n   * @returns\n   */\n  #getCookie (key) {\n    const name = key + '='\n    const ca = document.cookie.split(';')\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i]\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1)\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length)\n      }\n    }\n    return ''\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @param {Date} expirationDate\n   */\n  #setCookie (key, value, expirationDate) {\n    const cookie = key + '=' + value + '; ' +\n            'expires=' + expirationDate.toUTCString() + '; '\n    document.cookie = cookie\n  }\n\n  /**\n   * @param {number} minutes\n   * @returns {Date}\n   */\n  #cookieExpiration (minutes) {\n    const exp = new Date()\n    exp.setTime(exp.getTime() + (minutes * 60 * 1000))\n    return exp\n  }\n}\n\n/**\n * @param {Uint8Array<ArrayBuffer>} bytes\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\nfunction bytesToBase64 (bytes) {\n  const binString = String.fromCodePoint(...bytes)\n  return btoa(binString)\n}\n\n/**\n * @param {string} message\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#basic_example\n */\nasync function sha256Digest (message) {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(message)\n\n  if (typeof crypto === 'undefined' || typeof crypto.subtle === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return await crypto.subtle.digest('SHA-256', data)\n}\n\n/**\n * @param {string} token\n * @returns {KeycloakTokenParsed}\n */\nfunction decodeToken (token) {\n  const [, payload] = token.split('.')\n\n  if (typeof payload !== 'string') {\n    throw new Error('Unable to decode token, payload not found.')\n  }\n\n  let decoded\n\n  try {\n    decoded = base64UrlDecode(payload)\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid Base64URL value.', { cause: error })\n  }\n\n  try {\n    return JSON.parse(decoded)\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid JSON value.', { cause: error })\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction base64UrlDecode (input) {\n  let output = input\n    .replaceAll('-', '+')\n    .replaceAll('_', '/')\n\n  switch (output.length % 4) {\n    case 0:\n      break\n    case 2:\n      output += '=='\n      break\n    case 3:\n      output += '='\n      break\n    default:\n      throw new Error('Input is not of the correct length.')\n  }\n\n  try {\n    return b64DecodeUnicode(output)\n  } catch (error) {\n    return atob(output)\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction b64DecodeUnicode (input) {\n  return decodeURIComponent(atob(input).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase()\n\n    if (code.length < 2) {\n      code = '0' + code\n    }\n\n    return '%' + code\n  }))\n}\n\n/**\n * Check if the input is an object that can be operated on.\n * @param {unknown} input\n */\nfunction isObject (input) {\n  return typeof input === 'object' && input !== null\n}\n\n/**\n * @typedef {Object} JsonConfig The JSON version of the adapter configuration.\n * @property {string} auth-server-url The URL of the authentication server.\n * @property {string} realm The name of the realm.\n * @property {string} resource The name of the resource, usually the client ID.\n */\n\n/**\n * Fetch the adapter configuration from the given URL.\n * @param {string} url\n * @returns {Promise<JsonConfig>}\n */\nasync function fetchJsonConfig (url) {\n  return await fetchJSON(url)\n}\n\n/**\n * Fetch the OpenID configuration from the given URL.\n * @param {string} url\n * @returns {Promise<OpenIdProviderMetadata>}\n */\nasync function fetchOpenIdConfig (url) {\n  return await fetchJSON(url)\n}\n\n/**\n * @typedef {Object} AccessTokenResponse The successful token response from the authorization server, based on the {@link https://datatracker.ietf.org/doc/html/rfc6749#section-5.1 OAuth 2.0 Authorization Framework specification}.\n * @property {string} access_token The access token issued by the authorization server.\n * @property {string} token_type The type of the token issued by the authorization server.\n * @property {number} [expires_in] The lifetime in seconds of the access token.\n * @property {string} [refresh_token] The refresh token issued by the authorization server.\n * @property {string} [id_token] The ID token issued by the authorization server, if requested.\n * @property {string} [scope] The scope of the access token.\n */\n\n/**\n * Fetch the access token from the given URL.\n * @param {string} url\n * @param {string} code\n * @param {string} clientId\n * @param {string} redirectUri\n * @param {string} [pkceCodeVerifier]\n * @returns {Promise<AccessTokenResponse>}\n */\nasync function fetchAccessToken (url, code, clientId, redirectUri, pkceCodeVerifier) {\n  const body = new URLSearchParams([\n    ['code', code],\n    ['grant_type', 'authorization_code'],\n    ['client_id', clientId],\n    ['redirect_uri', stripHash(redirectUri)]\n  ])\n\n  if (pkceCodeVerifier) {\n    body.append('code_verifier', pkceCodeVerifier)\n  }\n\n  return await fetchJSON(url, {\n    method: 'POST',\n    credentials: 'include',\n    body\n  })\n}\n\n/**\n * Fetch the refresh token from the given URL.\n * @param {string} url\n * @param {string} refreshToken\n * @param {string} clientId\n * @returns {Promise<AccessTokenResponse>}\n */\nasync function fetchRefreshToken (url, refreshToken, clientId) {\n  const body = new URLSearchParams([\n    ['grant_type', 'refresh_token'],\n    ['refresh_token', refreshToken],\n    ['client_id', clientId]\n  ])\n\n  return await fetchJSON(url, {\n    method: 'POST',\n    credentials: 'include',\n    body\n  })\n}\n\n/**\n * @template [T=unknown]\n * @param {string} url\n * @param {RequestInit} init\n * @returns {Promise<T>}\n */\nasync function fetchJSON (url, init = {}) {\n  const headers = new Headers(init.headers)\n  headers.set('Accept', CONTENT_TYPE_JSON)\n\n  const response = await fetchWithErrorHandling(url, {\n    ...init,\n    headers\n  })\n\n  return await response.json()\n}\n\n/**\n * @param {string} url\n * @param {RequestInit} [init]\n * @returns {Promise<Response>}\n */\nasync function fetchWithErrorHandling (url, init) {\n  const response = await fetch(url, init)\n\n  if (!response.ok) {\n    throw new NetworkError('Server responded with an invalid status.', { response })\n  }\n\n  return response\n}\n\n/**\n * @param {string} [token]\n * @returns {[string, string]}\n */\nfunction buildAuthorizationHeader (token) {\n  if (!token) {\n    throw new Error('Unable to build authorization header, token is not set, make sure the user is authenticated.')\n  }\n\n  return ['Authorization', `bearer ${token}`]\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripTrailingSlash (url) {\n  return url.endsWith('/') ? url.slice(0, -1) : url\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripHash (url) {\n  const parsedUrl = new URL(url)\n  parsedUrl.hash = ''\n  return parsedUrl.toString()\n}\n\n/**\n * @typedef {Object} NetworkErrorOptionsProperties\n * @property {Response} response\n * @typedef {ErrorOptions & NetworkErrorOptionsProperties} NetworkErrorOptions\n */\n\nexport class NetworkError extends Error {\n  /** @type {Response} */\n  response\n\n  /**\n   * @param {string} message\n   * @param {NetworkErrorOptions} options\n   */\n  constructor (message, options) {\n    super(message, options)\n    this.response = options.response\n  }\n}\n\n/**\n * @param {number} delay\n * @returns {Promise<void>}\n */\nconst waitForTimeout = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n"],
  "mappings": "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",
  "names": ["error"]
}
